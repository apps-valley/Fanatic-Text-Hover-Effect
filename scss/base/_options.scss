@mixin transition-options(
  $hovered-color: $hovered-text-color,
  $background-line-color: $transitioned-line-bg-clr,
  $transition-speed: $transition-speed,
  $transition-easing: $transition-easing,
  $transition-delay: $transition-delay,
  $padding-top: $space-above-the-text,
  $padding-bottom: $space-below-the-text,
  $padding-right: $space-on-the-right-side,
  $padding-left: $space-on-the-left-side,
  $display: $display
) {
  display: $display;
  padding-top: $padding-top;
  padding-bottom: $padding-bottom;
  padding-right: $padding-right;
  padding-left: $padding-left;
  transition-timing-function: $transition-easing;
  transition-duration: $transition-speed;
  transition-delay: $transition-delay;
  transition-property: color;
  white-space: nowrap;
  overflow: hidden;
  position: relative;
  z-index: 2;
  text-decoration: none;
  box-sizing: border-box;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  &:hover,
  &:focus {
    outline: 0;
    cursor: pointer;
    color: $hovered-color;
    transition: color $transition-speed $transition-easing;
  }

  &:after,
  &:before {
    transition-duration: $transition-speed;
    transition-timing-function: $transition-easing;
    transition-delay: $transition-delay;
  }

  &:hover:after,
  &:focus:after,
  &:hover:before,
  &:focus:before {
    background-color: $background-line-color;
    transition-duration: $transition-speed;
    transition-timing-function: $transition-easing;
    transition-delay: $transition-delay;
  }
}

$max-value-of-transitioned-property: 100%;
@mixin line-options(
  $type-of-pseudoelement,
  $transition-property,
  $value-of-transitioned-property,
  $untransitioned-width: $size-of-the-line,
  $untrasitioned-height: $size-of-the-line
) {
  &:#{$type-of-pseudoelement} {
    content: "";
    position: absolute;
    z-index: -1;
    background-color: transparent;
    transition-property: $transition-property, background-color;

    @if $transition-property == height {
      height: 0;
      width: $untransitioned-width;
    } @else if $transition-property == width {
      width: 0;
      height: $untrasitioned-height;
    } @else {
      width: $untransitioned-width;
      height: $untrasitioned-height;
    }
  }

  &:hover:#{$type-of-pseudoelement},
  &:focus:#{$type-of-pseudoelement} {
    outline: 0;
    transition-property: $transition-property, background-color;

    @if length($transition-property) > 1 {
      @each $property in $transition-property {
        #{$property}: $value-of-transitioned-property;
      }
    } @else {
      #{$transition-property}: $value-of-transitioned-property;
    }
  }
}
